name: Release

on:
  push:
    tags: ['v*']

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag format
        run: |
          if ! [[ "$GITHUB_REF" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid tag format. Must be vX.Y.Z"
            exit 1
          fi

      - name: Extract version from tag
        id: version
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "is_beta=$([[ "$TAG_VERSION" =~ ^0\. ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "📦 Preparing to release version $TAG_VERSION"

      - name: Validate tag matches package versions
        run: |
          TAG_VERSION="${{ steps.version.outputs.version }}"
          SDK_VERSION=$(grep '"version"' packages/sdk/package.json | head -1 | cut -d'"' -f4)
          REACT_VERSION=$(grep '"version"' packages/react-sdk/package.json | head -1 | cut -d'"' -f4)

          if [[ "$SDK_VERSION" != "$TAG_VERSION" ]] || [[ "$REACT_VERSION" != "$TAG_VERSION" ]]; then
            echo "❌ Version mismatch!"
            echo "Tag version: $TAG_VERSION"
            echo "SDK version: $SDK_VERSION"
            echo "React SDK version: $REACT_VERSION"
            echo ""
            echo "Please ensure all package.json files have version $TAG_VERSION before tagging."
            exit 1
          fi

          echo "✅ All package versions match tag version $TAG_VERSION"

      - uses: ./.github/actions/setup-project

      # Generate SDK from latest OpenAPI
      - run: pnpm generate

      # Build all packages
      - run: pnpm build

      # Run validation based on version type
      - name: Run quality gates
        run: |
          if [ "${{ steps.version.outputs.is_beta }}" = "true" ]; then
            echo "🔵 Beta release - running standard validation"
            pnpm ai:check
          else
            echo "🟢 Stable release - running full compliance"
            pnpm ai:compliance
          fi

      # Configure npm for publishing
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'

      # Publish to npm
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          if [ "${{ steps.version.outputs.is_beta }}" = "true" ]; then
            echo "📦 Publishing beta release to npm"
            pnpm -r publish --tag beta --no-git-checks
          else
            echo "📦 Publishing stable release to npm"
            pnpm -r publish --no-git-checks
          fi

      # Create GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## 🚀 Release ${{ steps.version.outputs.version }}

            This release includes all changes since the previous version.

            ### 📥 Installation

            ```bash
            npm install @airbolt/sdk@${{ steps.version.outputs.is_beta == 'true' && 'beta' || 'latest' }}
            npm install @airbolt/react-sdk@${{ steps.version.outputs.is_beta == 'true' && 'beta' || 'latest' }}
            ```

            ### 📝 What's Changed

            See the [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.version.outputs.prev_version }}...v${{ steps.version.outputs.version }}) for details.
          draft: false
          prerelease: ${{ steps.version.outputs.is_beta == 'true' }}

      - name: Summary
        run: |
          echo "✅ Release ${{ steps.version.outputs.version }} complete!"
          echo ""
          echo "📦 Packages published to npm:"
          echo "  - @airbolt/sdk@${{ steps.version.outputs.version }}"
          echo "  - @airbolt/react-sdk@${{ steps.version.outputs.version }}"
          echo ""
          echo "🏷️ Tagged as: ${{ steps.version.outputs.is_beta == 'true' && 'beta' || 'latest' }}"
          echo ""
          echo "🔗 View on npm:"
          echo "  - https://www.npmjs.com/package/@airbolt/sdk"
          echo "  - https://www.npmjs.com/package/@airbolt/react-sdk"
