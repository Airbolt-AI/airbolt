name: Claude Code Review

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  claude-review:
    # Run on PR open OR when @claude is mentioned in a PR comment
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request && 
       contains(github.event.comment.body, '@claude'))
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Use direct_prompt only for PR open events, not for comment mentions
          # TODO: Update direct_prompt in a separate PR to focus on changed lines only

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Optional: Add specific tools for running tests or linting
          allowed_tools: 'Bash(pnpm ai:quick),Bash(pnpm lint:fix),Bash(pnpm type-check),Bash(pnpm test),Bash(pnpm ai:mutation),Bash(pnpm affected:lint),Bash(pnpm affected:test)'

          # Optional: Skip review for certain conditions
          # Uncomment to skip review for work-in-progress or dependency updates
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]') &&
          #   !contains(github.event.pull_request.title, 'chore(deps)')
