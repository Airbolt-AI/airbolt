
> airbolt@1.0.0 test /Users/ericsauter/Code/airbolt-ai/airbolt
> NODE_OPTIONS='--import tsx' nx run-many -t test


 NX   Running target test for 7 projects and 8 tasks they depend on:

- @airbolt/test-utils
- react-sdk
- backend-api
- @airbolt/config
- @airbolt/types
- @airbolt/auth
- sdk



> nx run @airbolt/config:type-check  [existing outputs match the cache, left as is]


> @airbolt/config@1.0.0 type-check /Users/ericsauter/Code/airbolt-ai/airbolt/packages/config
> tsc --noEmit


> nx run @airbolt/config:test  [local cache]


> @airbolt/config@1.0.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/config
> cd ../.. && NODE_OPTIONS='--import tsx' pnpm exec vitest run packages/config/test/*.test.ts


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt[39m

 [32m✓[39m packages/config/test/environment.test.ts [2m([22m[2m21 tests[22m[2m)[22m[32m 5[2mms[22m[39m

[2m Test Files [22m [1m[32m1 passed[39m[22m[90m (1)[39m
[2m      Tests [22m [1m[32m21 passed[39m[22m[90m (21)[39m
[2m   Start at [22m 10:29:31
[2m   Duration [22m 247ms[2m (transform 23ms, setup 14ms, collect 14ms, tests 5ms, environment 0ms, prepare 54ms)[22m


> nx run @airbolt/config:build  [local cache]


> @airbolt/config@1.0.0 build /Users/ericsauter/Code/airbolt-ai/airbolt/packages/config
> tsc -p tsconfig.build.json


> nx run @airbolt/test-utils:type-check  [existing outputs match the cache, left as is]


> @airbolt/test-utils@1.0.0 type-check /Users/ericsauter/Code/airbolt-ai/airbolt/packages/test-utils
> tsc --noEmit


> nx run @airbolt/test-utils:build  [local cache]


> @airbolt/test-utils@1.0.0 build /Users/ericsauter/Code/airbolt-ai/airbolt/packages/test-utils
> tsc -p tsconfig.build.json


> nx run sdk:generate

> pnpm run generate


> @airbolt/sdk@0.8.0 generate /Users/ericsauter/Code/airbolt-ai/airbolt/packages/sdk
> bash ../../scripts/sdk-generate.sh

[0;32m✅ SDK is up to date (cache hit)[0m
Generated SDK: packages/sdk/generated
Cache hash: b9499d28a4ccd55b961b2ab2659da74feb5ceb92d86e50b75202c13213f713f9-36612017d4f5b3b6e8f1b331b30c45d7336005dbc285e6dd411dae5be8a59eac

> nx run sdk:build  [local cache]

> tsc --build


> nx run sdk:test  [local cache]

> pnpm test


> @airbolt/sdk@0.8.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/sdk
> echo 'SDK tests are run from the main project root'

SDK tests are run from the main project root

> nx run react-sdk:test  [local cache]

> pnpm test


> @airbolt/react-sdk@0.8.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/react-sdk
> vitest run


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt/packages/react-sdk[39m

 [32m✓[39m test/hooks/useChat.streaming.test.tsx [2m([22m[2m2 tests[22m[2m)[22m[32m 13[2mms[22m[39m
 [32m✓[39m test/components/ChatWidget.test.tsx [2m([22m[2m9 tests[22m[2m)[22m[32m 33[2mms[22m[39m
 [32m✓[39m test/components/ChatWidget.styling.test.tsx [2m([22m[2m8 tests[22m[2m)[22m[32m 35[2mms[22m[39m
 [32m✓[39m test/hooks/useChat.test.ts [2m([22m[2m24 tests[22m[2m)[22m[32m 182[2mms[22m[39m
 [32m✓[39m test/hooks/useChat.property.test.ts [2m([22m[2m12 tests[22m[2m)[22m[33m 580[2mms[22m[39m
[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

[90mstderr[2m | test/hooks/useChat.streaming.property.test.ts[2m > [22m[2museChat streaming property tests[2m > [22m[2mshould prevent concurrent streaming requests
[22m[39mWarning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/.pnpm/@testing-library+react@14.3.1_@types+react@18.3.23_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@testing-library/react/dist/pure.js:307:5)

 [32m✓[39m test/hooks/useChat.streaming.property.test.ts [2m([22m[2m4 tests[22m[2m)[22m[33m 2673[2mms[22m[39m
   [33m[2m✓[22m[39m useChat streaming property tests[2m > [22mshould handle any valid streaming pattern [33m 2379[2mms[22m[39m

[2m Test Files [22m [1m[32m6 passed[39m[22m[90m (6)[39m
[2m      Tests [22m [1m[32m59 passed[39m[22m[90m (59)[39m
[2m   Start at [22m 10:29:35
[2m   Duration [22m 3.40s[2m (transform 256ms, setup 0ms, collect 1.79s, tests 3.52s, environment 1.04s, prepare 473ms)[22m


> nx run @airbolt/test-utils:test  [local cache]


> @airbolt/test-utils@1.0.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/test-utils
> cd ../.. && NODE_OPTIONS='--import tsx' pnpm exec vitest run packages/test-utils/test/*.test.ts


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt[39m

 [32m✓[39m packages/test-utils/test/env.test.ts [2m([22m[2m18 tests[22m[2m)[22m[32m 4[2mms[22m[39m

[2m Test Files [22m [1m[32m1 passed[39m[22m[90m (1)[39m
[2m      Tests [22m [1m[32m18 passed[39m[22m[90m (18)[39m
[2m   Start at [22m 10:29:38
[2m   Duration [22m 223ms[2m (transform 22ms, setup 12ms, collect 11ms, tests 4ms, environment 0ms, prepare 47ms)[22m


> nx run @airbolt/types:test  [local cache]


> @airbolt/types@0.1.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/types
> cd ../.. && NODE_OPTIONS='--import tsx' pnpm exec vitest run packages/types/test/*.test.ts


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt[39m

 [32m✓[39m packages/types/test/validators.test.ts [2m([22m[2m41 tests[22m[2m)[22m[32m 21[2mms[22m[39m
 [32m✓[39m packages/types/test/brand.test.ts [2m([22m[2m22 tests[22m[2m)[22m[32m 8[2mms[22m[39m
 [32m✓[39m packages/types/test/entity-ids.test.ts [2m([22m[2m40 tests[22m[2m)[22m[32m 5[2mms[22m[39m
 [32m✓[39m packages/types/test/zod-integration.test.ts [2m([22m[2m33 tests[22m[2m)[22m[32m 6[2mms[22m[39m

[2m Test Files [22m [1m[32m4 passed[39m[22m[90m (4)[39m
[2m      Tests [22m [1m[32m136 passed[39m[22m[90m (136)[39m
[2m   Start at [22m 10:29:40
[2m   Duration [22m 396ms[2m (transform 57ms, setup 16ms, collect 126ms, tests 40ms, environment 0ms, prepare 53ms)[22m


> nx run @airbolt/auth:type-check


> @airbolt/auth@0.1.0 type-check /Users/ericsauter/Code/airbolt-ai/airbolt/packages/auth
> tsc --noEmit


> nx run @airbolt/auth:test


> @airbolt/auth@0.1.0 test /Users/ericsauter/Code/airbolt-ai/airbolt/packages/auth
> cd ../.. && NODE_OPTIONS='--import tsx' pnpm exec vitest run packages/auth/test/*.test.ts


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt[39m

 [32m✓[39m packages/auth/test/validation-policy.test.ts [2m([22m[2m10 tests[22m[2m)[22m[32m 13[2mms[22m[39m
 [32m✓[39m packages/auth/test/internal-validator.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 3[2mms[22m[39m
 [32m✓[39m packages/auth/test/factory.test.ts [2m([22m[2m5 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/auth/test/auth-mode-detector.test.ts [2m([22m[2m10 tests[22m[2m)[22m[32m 0[2mms[22m[39m

[2m Test Files [22m [1m[32m4 passed[39m[22m[90m (4)[39m
[2m      Tests [22m [1m[32m33 passed[39m[22m[90m (33)[39m
[2m   Start at [22m 13:49:43
[2m   Duration [22m 644ms[2m (transform 50ms, setup 17ms, collect 400ms, tests 18ms, environment 0ms, prepare 47ms)[22m


> nx run @airbolt/auth:build


> @airbolt/auth@0.1.0 build /Users/ericsauter/Code/airbolt-ai/airbolt/packages/auth
> tsc -p tsconfig.build.json


> nx run backend-api:test


> backend-api@0.0.0-private test /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api
> cd ../.. && NODE_OPTIONS='--import tsx' pnpm exec vitest run


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/Users/ericsauter/Code/airbolt-ai/airbolt[39m

 [31m❯[39m apps/backend-api/test/scripts/openapi-generation.test.ts [2m([22m[2m8 tests[22m[2m | [22m[31m2 failed[39m[2m | [22m[33m4 skipped[39m[2m)[22m[33m 1710[2mms[22m[39m
   [32m✓[39m OpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould exist and be executable[32m 1[2mms[22m[39m
[31m   [31m×[31m OpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould generate valid OpenAPI specification[39m[33m 655[2mms[22m[39m
[31m     → Command failed: node /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi.js

node:internal/modules/run_main:104
    triggerUncaughtException(
    ^
Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@fastify/autoload' imported from /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts
Did you mean to import "@fastify/autoload/index.js"?
[90m    at Object.getPackageJSONURL (node:internal/modules/package_json_reader:267:9)[31m
[90m    at packageResolve (node:internal/modules/esm/resolve:768:81)[31m
[90m    at moduleResolve (node:internal/modules/esm/resolve:854:18)[31m
[90m    at defaultResolve (node:internal/modules/esm/resolve:984:11)[31m
[90m    at nextResolve (node:internal/modules/esm/hooks:748:28)[31m
    at resolveBase (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:3811)
    at resolveDirectory (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:4310)
    at resolveTsPaths (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:5051)
    at async resolve (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:5422)
[90m    at async nextResolve (node:internal/modules/esm/hooks:748:22)[31m {
  code: [32m'ERR_MODULE_NOT_FOUND'[31m
}

Node.js v23.11.0
❌ Failed to generate OpenAPI specification: Error: Command failed: npx tsx /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi-temp.ts
[90m    at genericNodeError (node:internal/errors:983:15)[31m
[90m    at wrappedFn (node:internal/errors:537:14)[31m
[90m    at checkExecSyncError (node:child_process:882:11)[31m
[90m    at execSync (node:child_process:954:15)[31m
    at generateOpenAPISpec [90m(file:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:66:7[90m)[31m
    at [90mfile:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:85:1
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)[31m
[90m    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)[31m
[90m    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:98:5)[31m {
  status: [33m1[31m,
  signal: [1mnull[22m,
  output: [ [1mnull[22m, [1mnull[22m, [1mnull[22m ],
  pid: [33m30661[31m,
  stdout: [1mnull[22m,
  stderr: [1mnull[22m
}
[39m
[31m   [31m×[31m OpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould generate spec with correct structure[39m[33m 485[2mms[22m[39m
[31m     → Command failed: node /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi.js

node:internal/modules/run_main:104
    triggerUncaughtException(
    ^
Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@fastify/autoload' imported from /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts
Did you mean to import "@fastify/autoload/index.js"?
[90m    at Object.getPackageJSONURL (node:internal/modules/package_json_reader:267:9)[31m
[90m    at packageResolve (node:internal/modules/esm/resolve:768:81)[31m
[90m    at moduleResolve (node:internal/modules/esm/resolve:854:18)[31m
[90m    at defaultResolve (node:internal/modules/esm/resolve:984:11)[31m
[90m    at nextResolve (node:internal/modules/esm/hooks:748:28)[31m
    at resolveBase (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:3811)
    at resolveDirectory (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:4310)
    at resolveTsPaths (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:5051)
    at async resolve (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:5422)
[90m    at async nextResolve (node:internal/modules/esm/hooks:748:22)[31m {
  code: [32m'ERR_MODULE_NOT_FOUND'[31m
}

Node.js v23.11.0
❌ Failed to generate OpenAPI specification: Error: Command failed: npx tsx /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi-temp.ts
[90m    at genericNodeError (node:internal/errors:983:15)[31m
[90m    at wrappedFn (node:internal/errors:537:14)[31m
[90m    at checkExecSyncError (node:child_process:882:11)[31m
[90m    at execSync (node:child_process:954:15)[31m
    at generateOpenAPISpec [90m(file:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:66:7[90m)[31m
    at [90mfile:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:85:1
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)[31m
[90m    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)[31m
[90m    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:98:5)[31m {
  status: [33m1[31m,
  signal: [1mnull[22m,
  output: [ [1mnull[22m, [1mnull[22m, [1mnull[22m ],
  pid: [33m31868[31m,
  stdout: [1mnull[22m,
  stderr: [1mnull[22m
}
[39m
   [32m✓[39m OpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould handle script errors gracefully[32m 85[2mms[22m[39m
   [2m[90m↓[39m[22m OpenAPI Generation Scripts[2m > [22mOpenAPI Specification Quality[2m > [22mshould have complete endpoint documentation
   [2m[90m↓[39m[22m OpenAPI Generation Scripts[2m > [22mOpenAPI Specification Quality[2m > [22mshould have consistent response schemas
   [2m[90m↓[39m[22m OpenAPI Generation Scripts[2m > [22mOpenAPI Specification Quality[2m > [22mshould include examples for all responses
   [2m[90m↓[39m[22m OpenAPI Generation Scripts[2m > [22mOpenAPI Specification Quality[2m > [22mshould be suitable for SDK generation
 [32m✓[39m apps/backend-api/test/plugins/env.direct.test.ts [2m([22m[2m21 tests[22m[2m)[22m[32m 42[2mms[22m[39m
 [32m✓[39m apps/backend-api/test/plugins/env.test.ts [2m([22m[2m48 tests[22m[2m)[22m[32m 4[2mms[22m[39m
 [32m✓[39m apps/backend-api/test/routes/root.unit.test.ts [2m([22m[2m3 tests[22m[2m)[22m[32m 16[2mms[22m[39m
 [32m✓[39m apps/backend-api/test/plugins/sensible.unit.test.ts [2m([22m[2m3 tests[22m[2m)[22m[32m 3[2mms[22m[39m
{"level":30,"time":1753724987918,"pid":30138,"hostname":"Erics-MacBook-Pro-2.local","config":{"NODE_ENV":"test","PORT":3000,"LOG_LEVEL":"error","AI_PROVIDER":"openai","AI_MODEL":"gpt-4","OPENAI_API_KEY":"[REDACTED]","ANTHROPIC_API_KEY":"[REDACTED]","JWT_SECRET":"[REDACTED]","ALLOWED_ORIGIN":["http://localhost:3000","http://localhost:3001"],"SYSTEM_PROMPT":"You are a helpful assistant","RATE_LIMIT_MAX":100,"RATE_LIMIT_TIME_WINDOW":60000,"TRUST_PROXY":true,"TOKEN_LIMIT_MAX":"[REDACTED]","TOKEN_LIMIT_TIME_WINDOW":"[REDACTED]","REQUEST_LIMIT_MAX":100,"REQUEST_LIMIT_TIME_WINDOW":3600000},"msg":"Environment configuration loaded"}
{"level":30,"time":1753724987918,"pid":30138,"hostname":"Erics-MacBook-Pro-2.local","msg":"AI Provider service registered successfully (provider: openai)"}
 [32m✓[39m apps/backend-api/test/services/ai-provider.plugin.test.ts [2m([22m[2m9 tests[22m[2m)[22m[32m 6[2mms[22m[39m
 [32m✓[39m apps/backend-api/test/services/ai-provider.unit.test.ts [2m([22m[2m18 tests[22m[2m)[22m[32m 14[2mms[22m[39m
 [32m✓[39m apps/backend-api/test/services/provider-config.test.ts [2m([22m[2m15 tests[22m[2m)[22m[32m 22[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/token-manager.test.ts [2m([22m[2m25 tests[22m[2m)[22m[33m 6819[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mgetToken[2m > [22mshould refresh token if expired [33m 1100[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mgetToken[2m > [22mshould retry on network failures [33m 302[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mgetToken[2m > [22mshould throw TokenError after max retries [33m 303[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mgetToken[2m > [22mshould throw TokenError on HTTP errors [33m 302[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mparseExpirationTime[2m > [22mshould throw on invalid expiration format [33m 301[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22mhasValidToken[2m > [22mshould return false when token is expired [33m 1201[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22merror handling[2m > [22mshould handle JSON parsing errors gracefully [33m 302[2mms[22m[39m
   [33m[2m✓[22m[39m TokenManager[2m > [22merror handling[2m > [22mshould handle missing fetch implementation [33m 3003[2mms[22m[39m
[90mstdout[2m | packages/sdk/test/auth-integration-validation.test.ts[2m > [22m[2mAuth Integration Feasibility[2m > [22m[2mIntegration Pattern Validation[2m > [22m[2mshould identify the critical integration challenge
[22m[39m🚨 Critical Integration Challenge:
   Infrastructure: ✅ Excellent (timeout, retry, headers, errors)
   API Methods: ❌ None generated
   Root Cause: OpenAPI spec needs $ref components, not inline schemas
   Solution: Fix OpenAPI → Regenerate → Then wrap with auth

 [32m✓[39m packages/sdk/test/auth-integration-validation.test.ts [2m([22m[2m5 tests[22m[2m)[22m[33m 1026[2mms[22m[39m
   [33m[2m✓[22m[39m Auth Integration Feasibility[2m > [22mFetcher Infrastructure Assessment[2m > [22mshould handle timeout and retry configurations [33m 1001[2mms[22m[39m
[90mstdout[2m | packages/sdk/test/fern-validation.test.ts[2m > [22m[2mFern SDK Generation Validation[2m > [22m[2mBundle Size Analysis[2m > [22m[2mshould have reasonable bundle size compared to hand-written client
[22m[39mGenerated size: 292KB, Source size: 84KB
Ratio: 347.6% of source size

[90mstdout[2m | packages/sdk/test/fern-validation.test.ts[2m > [22m[2mFern SDK Generation Validation[2m > [22m[2mGenerated Client Analysis[2m > [22m[2mshould document the successful client generation
[22m[39mGenerated 68 files with 1999 total total lines
Infrastructure: ✅ Sophisticated
API Methods: ❌ None generated
Root Cause: OpenAPI spec has inline schemas, not $ref components

 [32m✓[39m packages/sdk/test/fern-validation.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 166[2mms[22m[39m
 [32m✓[39m packages/sdk/test/api/chat.property.test.ts [2m([22m[2m6 tests[22m[2m)[22m[32m 237[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/url-utils.property.test.ts [2m([22m[2m10 tests[22m[2m)[22m[32m 23[2mms[22m[39m
 [32m✓[39m packages/auth/test/validation-policy.test.ts [2m([22m[2m10 tests[22m[2m)[22m[32m 7[2mms[22m[39m
 [32m✓[39m packages/types/test/validators.test.ts [2m([22m[2m41 tests[22m[2m)[22m[32m 14[2mms[22m[39m
 [32m✓[39m packages/sdk/test/fern-client-validation.test.ts [2m([22m[2m5 tests[22m[2m)[22m[32m 7[2mms[22m[39m
 [32m✓[39m packages/types/test/brand.test.ts [2m([22m[2m22 tests[22m[2m)[22m[32m 7[2mms[22m[39m
 [32m✓[39m packages/types/test/entity-ids.test.ts [2m([22m[2m40 tests[22m[2m)[22m[32m 4[2mms[22m[39m
 [32m✓[39m packages/types/test/zod-integration.test.ts [2m([22m[2m33 tests[22m[2m)[22m[32m 4[2mms[22m[39m
 [32m✓[39m packages/auth/test/internal-validator.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/timeout-utils.test.ts [2m([22m[2m8 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/fern-client.test.ts [2m([22m[2m14 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/auth/test/factory.test.ts [2m([22m[2m5 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/sdk/test/api/session.test.ts [2m([22m[2m11 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/token-manager.property.test.ts [2m([22m[2m3 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/cold-start-retry.test.ts [2m([22m[2m9 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/test/chat-streaming.test.ts [2m([22m[2m2 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/src/auth-providers.test.ts [2m([22m[2m13 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/test-utils/test/env.test.ts [2m([22m[2m18 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/sdk/test/api/chat.test.ts [2m([22m[2m9 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/url-utils.test.ts [2m([22m[2m25 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/sdk/test/core/fern-client-url-normalization.test.ts [2m([22m[2m11 tests[22m[2m)[22m[32m 1[2mms[22m[39m
 [32m✓[39m packages/config/test/environment.test.ts [2m([22m[2m21 tests[22m[2m)[22m[32m 2[2mms[22m[39m
 [32m✓[39m packages/auth/test/auth-mode-detector.test.ts [2m([22m[2m10 tests[22m[2m)[22m[32m 0[2mms[22m[39m
 [2m[90m↓[39m[22m packages/sdk/test/integration/sdk-integration.test.ts [2m([22m[2m21 tests[22m[2m | [22m[33m21 skipped[39m[2m)[22m

[31m⎯⎯⎯⎯⎯⎯[39m[1m[41m Failed Suites 16 [49m[22m[31m⎯⎯⎯⎯⎯⎯[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/e2e/auth0-chat-session.test.ts[2m [ apps/backend-api/test/e2e/auth0-chat-session.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/integration/sdk-integration.test.ts[2m [ apps/backend-api/test/integration/sdk-integration.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/routes/root.test.ts[2m [ apps/backend-api/test/routes/root.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/support.test.ts[2m [ apps/backend-api/test/plugins/support.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/swagger.test.ts[2m [ apps/backend-api/test/plugins/swagger.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/routes/api/auth-security-isolation.test.ts[2m [ apps/backend-api/test/routes/api/auth-security-isolation.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/routes/api/chat.anonymous-journey.test.ts[2m [ apps/backend-api/test/routes/api/chat.anonymous-journey.test.ts ][22m
[31m[1mError[22m: Cannot find package '@fastify/autoload' imported from '/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts'[39m
[36m [2m❯[22m apps/backend-api/src/app.ts:[2m3:31[22m[39m
    [90m  2| [39m[35mimport[39m { fileURLToPath } [35mfrom[39m [32m'node:url'[39m[33m;[39m
    [90m  3| [39m
    [90m  4| [39m[35mimport[39m [33mAutoLoad[39m [35mfrom[39m [32m'@fastify/autoload'[39m[33m;[39m
    [90m   | [39m                             [31m^[39m
    [90m  5| [39m[35mimport[39m type { [33mAutoloadPluginOptions[39m } [35mfrom[39m [32m'@fastify/autoload'[39m[33m;[39m
    [90m  6| [39m[35mimport[39m type {

[31m[1mCaused by: Error[22m: Failed to load url @fastify/autoload (resolved id: @fastify/autoload) in /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts. Does the file exist?[39m
[90m [2m❯[22m loadAndTransform node_modules/.pnpm/vite@5.4.19_@types+node@22.16.3/node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:[2m51968:17[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/e2e/developer-workflow.integration.test.ts[2m [ apps/backend-api/test/e2e/developer-workflow.integration.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/cors-environment.property.test.ts[2m [ apps/backend-api/test/plugins/cors-environment.property.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/cors-security.test.ts[2m [ apps/backend-api/test/plugins/cors-security.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/cors.test.ts[2m [ apps/backend-api/test/plugins/cors.test.ts ][22m
[31m[1mError[22m: Cannot find package '@fastify/cors' imported from '/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/cors.ts'[39m
[36m [2m❯[22m apps/backend-api/src/plugins/cors.ts:[2m1:1[22m[39m
    [90m  1| [39m[35mimport[39m fastifyCors[33m,[39m { type [33mFastifyCorsOptions[39m } [35mfrom[39m [32m'@fastify/cors'[39m[33m;[39m
    [90m   | [39m[31m^[39m
    [90m  2| [39m[35mimport[39m fp [35mfrom[39m [32m'fastify-plugin'[39m[33m;[39m
    [90m  3| [39m

[31m[1mCaused by: Error[22m: Failed to load url @fastify/cors (resolved id: @fastify/cors) in /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/cors.ts. Does the file exist?[39m
[90m [2m❯[22m loadAndTransform node_modules/.pnpm/vite@5.4.19_@types+node@22.16.3/node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:[2m51968:17[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/rate-limit.test.ts[2m [ apps/backend-api/test/plugins/rate-limit.test.ts ][22m
[31m[1mError[22m: Cannot find package '@fastify/rate-limit' imported from '/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/rate-limit.ts'[39m
[36m [2m❯[22m apps/backend-api/src/plugins/rate-limit.ts:[2m1:1[22m[39m
    [90m  1| [39m[35mimport[39m fastifyRateLimit[33m,[39m {
    [90m   | [39m[31m^[39m
    [90m  2| [39m  type [33mRateLimitPluginOptions[39m[33m,[39m
    [90m  3| [39m} [35mfrom[39m [32m'@fastify/rate-limit'[39m[33m;[39m

[31m[1mCaused by: Error[22m: Failed to load url @fastify/rate-limit (resolved id: @fastify/rate-limit) in /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/rate-limit.ts. Does the file exist?[39m
[90m [2m❯[22m loadAndTransform node_modules/.pnpm/vite@5.4.19_@types+node@22.16.3/node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:[2m51968:17[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/user-rate-limit.property.test.ts[2m [ apps/backend-api/test/plugins/user-rate-limit.property.test.ts ][22m
[41m[1m FAIL [22m[49m apps/backend-api/test/plugins/user-rate-limit.simple.test.ts[2m [ apps/backend-api/test/plugins/user-rate-limit.simple.test.ts ][22m
[31m[1mError[22m: Cannot find package 'rate-limiter-flexible' imported from '/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/user-rate-limit.ts'[39m
[36m [2m❯[22m apps/backend-api/src/plugins/user-rate-limit.ts:[2m2:31[22m[39m
    [90m  1| [39m[35mimport[39m fp [35mfrom[39m [32m'fastify-plugin'[39m[33m;[39m
    [90m  2| [39m[35mimport[39m { [33mRateLimiterMemory[39m } [35mfrom[39m [32m'rate-limiter-flexible'[39m[33m;[39m
    [90m   | [39m                              [31m^[39m
    [90m  3| [39mimport type { FastifyInstance, FastifyRequest, FastifyReply } from 'fa…
    [90m  4| [39m

[31m[1mCaused by: Error[22m: Failed to load url rate-limiter-flexible (resolved id: rate-limiter-flexible) in /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/plugins/user-rate-limit.ts. Does the file exist?[39m
[90m [2m❯[22m loadAndTransform node_modules/.pnpm/vite@5.4.19_@types+node@22.16.3/node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:[2m51968:17[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/scripts/openapi-generation.test.ts[2m > [22mOpenAPI Generation Scripts[2m > [22mOpenAPI Specification Quality
[31m[1mError[22m: Command failed: node /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi.js

node:internal/modules/run_main:104
    triggerUncaughtException(
    ^
Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@fastify/autoload' imported from /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts
Did you mean to import "@fastify/autoload/index.js"?
[90m    at Object.getPackageJSONURL (node:internal/modules/package_json_reader:267:9)[31m
[90m    at packageResolve (node:internal/modules/esm/resolve:768:81)[31m
[90m    at moduleResolve (node:internal/modules/esm/resolve:854:18)[31m
[90m    at defaultResolve (node:internal/modules/esm/resolve:984:11)[31m
[90m    at nextResolve (node:internal/modules/esm/hooks:748:28)[31m
    at resolveBase (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:2:3811)
    at resolveDirectory (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:2:4310)
    at resolveTsPaths (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:2:5051)
    at async resolve (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:2:5422)
[90m    at async nextResolve (node:internal/modules/esm/hooks:748:22)[31m {
  code: [32m'ERR_MODULE_NOT_FOUND'[31m
}

Node.js v23.11.0
❌ Failed to generate OpenAPI specification: Error: Command failed: npx tsx /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi-temp.ts
[90m    at genericNodeError (node:internal/errors:983:15)[31m
[90m    at wrappedFn (node:internal/errors:537:14)[31m
[90m    at checkExecSyncError (node:child_process:882:11)[31m
[90m    at execSync (node:child_process:954:15)[31m
    at generateOpenAPISpec [90m(file:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:66:7[90m)[31m
    at [90mfile:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:85:1
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)[31m
[90m    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)[31m
[90m    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:98:5)[31m {
  status: [33m1[31m,
  signal: [1mnull[22m,
  output: [ [1mnull[22m, [1mnull[22m, [1mnull[22m ],
  pid: [33m32925[31m,
  stdout: [1mnull[22m,
  stderr: [1mnull[22m
}
[39m
[90m [2m❯[22m resolveBase node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:[2m2:3811[22m[39m
[90m [2m❯[22m resolveDirectory node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:[2m2:4310[22m[39m
[90m [2m❯[22m resolveTsPaths node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:[2m2:5051[22m[39m
[90m [2m❯[22m resolve node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724987379:[2m2:5422[22m[39m
[90m [2m❯[22m [90mfile:/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[90mscripts/generate-openapi.js:[2m85:1[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/routes/api/chat-unit.test.ts[2m [ apps/backend-api/test/routes/api/chat-unit.test.ts ][22m
[31m[1mError[22m: [vitest] There was an error when mocking a module. If you are using "vi.mock" factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock[39m
[36m [2m❯[22m apps/backend-api/src/routes/api/chat.ts:[2m3:31[22m[39m
    [90m  1| [39m[35mimport[39m type { [33mFastifyPluginAsync[39m } [35mfrom[39m [32m'fastify'[39m[33m;[39m
    [90m  2| [39m[35mimport[39m { z } [35mfrom[39m [32m'zod'[39m[33m;[39m
    [90m  3| [39m[35mimport[39m { isDevelopment } [35mfrom[39m [32m'@airbolt/config'[39m[33m;[39m
    [90m   | [39m                              [31m^[39m
    [90m  4| [39m[35mimport[39m {
    [90m  5| [39m  [33mMessageSchema[39m[33m,[39m

[31m[1mCaused by: Error[22m: Cannot find package '@ai-sdk/openai' imported from '/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/services/ai-provider.ts'[39m
[36m [2m❯[22m apps/backend-api/src/services/ai-provider.ts:[2m3:31[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22m[39m
[31m[1mSerialized Error:[22m[39m [90m{ code: 'ERR_MODULE_NOT_FOUND' }[39m
[31m[1mCaused by: Error[22m: Failed to load url @ai-sdk/openai (resolved id: @ai-sdk/openai) in /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/services/ai-provider.ts. Does the file exist?[39m
[90m [2m❯[22m loadAndTransform node_modules/.pnpm/vite@5.4.19_@types+node@22.16.3/node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:[2m51968:17[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/18]⎯[22m[39m


[31m⎯⎯⎯⎯⎯⎯⎯[39m[1m[41m Failed Tests 2 [49m[22m[31m⎯⎯⎯⎯⎯⎯⎯[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/scripts/openapi-generation.test.ts[2m > [22mOpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould generate valid OpenAPI specification
[31m[1mError[22m: Command failed: node /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi.js

node:internal/modules/run_main:104
    triggerUncaughtException(
    ^
Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@fastify/autoload' imported from /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts
Did you mean to import "@fastify/autoload/index.js"?
[90m    at Object.getPackageJSONURL (node:internal/modules/package_json_reader:267:9)[31m
[90m    at packageResolve (node:internal/modules/esm/resolve:768:81)[31m
[90m    at moduleResolve (node:internal/modules/esm/resolve:854:18)[31m
[90m    at defaultResolve (node:internal/modules/esm/resolve:984:11)[31m
[90m    at nextResolve (node:internal/modules/esm/hooks:748:28)[31m
    at resolveBase (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:3811)
    at resolveDirectory (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:4310)
    at resolveTsPaths (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:5051)
    at async resolve (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:2:5422)
[90m    at async nextResolve (node:internal/modules/esm/hooks:748:22)[31m {
  code: [32m'ERR_MODULE_NOT_FOUND'[31m
}

Node.js v23.11.0
❌ Failed to generate OpenAPI specification: Error: Command failed: npx tsx /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi-temp.ts
[90m    at genericNodeError (node:internal/errors:983:15)[31m
[90m    at wrappedFn (node:internal/errors:537:14)[31m
[90m    at checkExecSyncError (node:child_process:882:11)[31m
[90m    at execSync (node:child_process:954:15)[31m
    at generateOpenAPISpec [90m(file:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:66:7[90m)[31m
    at [90mfile:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:85:1
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)[31m
[90m    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)[31m
[90m    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:98:5)[31m {
  status: [33m1[31m,
  signal: [1mnull[22m,
  output: [ [1mnull[22m, [1mnull[22m, [1mnull[22m ],
  pid: [33m30661[31m,
  stdout: [1mnull[22m,
  stderr: [1mnull[22m
}
[39m
[90m [2m❯[22m resolveBase node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:[2m2:3811[22m[39m
[90m [2m❯[22m resolveDirectory node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:[2m2:4310[22m[39m
[90m [2m❯[22m resolveTsPaths node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:[2m2:5051[22m[39m
[90m [2m❯[22m resolve node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986306:[2m2:5422[22m[39m
[90m [2m❯[22m [90mfile:/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[90mscripts/generate-openapi.js:[2m85:1[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/18]⎯[22m[39m

[41m[1m FAIL [22m[49m apps/backend-api/test/scripts/openapi-generation.test.ts[2m > [22mOpenAPI Generation Scripts[2m > [22mDevelopment OpenAPI Generation Script[2m > [22mshould generate spec with correct structure
[31m[1mError[22m: Command failed: node /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi.js

node:internal/modules/run_main:104
    triggerUncaughtException(
    ^
Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@fastify/autoload' imported from /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/src/app.ts
Did you mean to import "@fastify/autoload/index.js"?
[90m    at Object.getPackageJSONURL (node:internal/modules/package_json_reader:267:9)[31m
[90m    at packageResolve (node:internal/modules/esm/resolve:768:81)[31m
[90m    at moduleResolve (node:internal/modules/esm/resolve:854:18)[31m
[90m    at defaultResolve (node:internal/modules/esm/resolve:984:11)[31m
[90m    at nextResolve (node:internal/modules/esm/hooks:748:28)[31m
    at resolveBase (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:3811)
    at resolveDirectory (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:4310)
    at resolveTsPaths (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:5051)
    at async resolve (file:///Users/ericsauter/Code/airbolt-ai/airbolt/node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:2:5422)
[90m    at async nextResolve (node:internal/modules/esm/hooks:748:22)[31m {
  code: [32m'ERR_MODULE_NOT_FOUND'[31m
}

Node.js v23.11.0
❌ Failed to generate OpenAPI specification: Error: Command failed: npx tsx /Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/scripts/generate-openapi-temp.ts
[90m    at genericNodeError (node:internal/errors:983:15)[31m
[90m    at wrappedFn (node:internal/errors:537:14)[31m
[90m    at checkExecSyncError (node:child_process:882:11)[31m
[90m    at execSync (node:child_process:954:15)[31m
    at generateOpenAPISpec [90m(file:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:66:7[90m)[31m
    at [90mfile:///Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[31mscripts/generate-openapi.js:85:1
[90m    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)[31m
[90m    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)[31m
[90m    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:98:5)[31m {
  status: [33m1[31m,
  signal: [1mnull[22m,
  output: [ [1mnull[22m, [1mnull[22m, [1mnull[22m ],
  pid: [33m31868[31m,
  stdout: [1mnull[22m,
  stderr: [1mnull[22m
}
[39m
[90m [2m❯[22m resolveBase node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:[2m2:3811[22m[39m
[90m [2m❯[22m resolveDirectory node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:[2m2:4310[22m[39m
[90m [2m❯[22m resolveTsPaths node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:[2m2:5051[22m[39m
[90m [2m❯[22m resolve node_modules/[4m.pnpm[24m/tsx@4.20.3/node_modules/[4mtsx[24m/dist/esm/index.mjs?1753724986813:[2m2:5422[22m[39m
[90m [2m❯[22m [90mfile:/Users/ericsauter/Code/airbolt-ai/airbolt/apps/backend-api/[90mscripts/generate-openapi.js:[2m85:1[22m[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/18]⎯[22m[39m


[2m Test Files [22m [1m[31m16 failed[39m[22m[2m | [22m[1m[32m33 passed[39m[22m[2m | [22m[33m1 skipped[39m[90m (50)[39m
[2m      Tests [22m [1m[31m2 failed[39m[22m[2m | [22m[1m[32m491 passed[39m[22m[2m | [22m[33m25 skipped[39m[90m (518)[39m
[2m   Start at [22m 13:49:45
[2m   Duration [22m 11.21s[2m (transform 278ms, setup 26ms, collect 413ms, tests 10.15s, environment 0ms, prepare 43ms)[22m

[41m[30m ELIFECYCLE [39m[49m [31mTest failed. See above for more details.[39m



 NX   Running target test for 7 projects and 8 tasks they depend on failed

Failed tasks:

- backend-api:test


 NX   Nx detected  flaky tasks

  @airbolt/auth:type-check
  @airbolt/auth:test

Flaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks

 ELIFECYCLE  Test failed. See above for more details.
